#!/bin/bash

first_time_setup() {
	mkdir --parents "$book_dir"
	touch "$chapter" "$config_file"
}

read_toc () {
	strbuilts --center "  Table of Contents  "
	cd "$book_dir"
	printf "%s\n" * | column
	strbuilts --center "'noty <chapter>' to see contents"
}

read_helptext () {
	printf "%s\n" \
'
WRITE USAGE: noty <chapter> <note> >OR< noty <note>
READ USAGE: noty >OR< noty <chapter>
	-(-h)elp	prints this text
	-(-t)oc		prints the list of chapters
	-(-c)hapter	create new chapter file in book_directory
	-(-a)ll		prints all saved notes
'
}

read_chapter () {
	strbuilts --center "  $(basename $chapter) knowledge  "
	printf "%s\n" "$(cat ${chapter})"
}

read_all () {
	for chap in "$book_dir"*; do
		chapter="$chap"
		read_chapter
	done
}

new_chapter () {
	if [ -z "$1" ]; then exit 0; fi
	printf "$*\n" >> "${chapter}"
	if [ "$verbose" = true ]; then tail -n 1 "${chapter}"; fi
	exit 0
}

################################################################################
#shelf= root directory		book= chapter directory		chapter= notes in files
################################################################################

#todo interpret more complex commands
#todo support shelves
#todo change chapter titles
#todo config general behavior in lots of ways would be neat
# ----like display one book? toc? toc + some chapters? {ch1, ch2, ... , chn}


book_dir="$HOME/.config/$USER/noty/"
default_chapter="${book_dir}general"
chapter="$default_chapter"
config_file="${book_dir}.noty_config"
EDITOR="nano"
verbose=true

print_variables () {
	printf "book_dir: %s\n" "$book_dir"
	printf "default_chapter: %s\n" "$default_chapter"
	printf "chapter: %s\n" "$chapter"
	printf "config_file %s\n" "$config_file"
	printf "EDITOR: %s\n" "$EDITOR" 
}
if [ ! -f "$config_file" ]; then first_time_setup; fi

while [ -n "$1" ]; do
	case "$1" in
		--all|-a|all)
			read_all
			exit 0
		;;
		--toc|--table-of-contents|-t|toc)
			read_toc
			exit 0
		;;
		--chapter|-c|new)
			title="${2//[!A-Za-z0-9-_./}";
			if [ -n "$title" ]; then 
				chapter="${book_dir}$title"
				touch "$chapter"
			fi
			shift 2
		;;
		--help|-h|help)
			read_helptext
			exit 0
		;;
		--edit|-e|edit)
			shift
			cd "$book_dir"
			$EDITOR "$(fzf -1 --query ${1:-' '})"
			exit 0
		;;
		--delete|-d)
			shift
			list=()
			for file in "${book_dir}"*; do
				if [ ! -s "$file" ]; then list+=("$file"); fi
			done
			if [ "${#list[@]}" -eq 0 ]; then
				echo "Only empty chapters are valid for deletion; none found."
				exit 0
			fi
			printf "noty will delete the following blank chapters:\n"
			printf "%s\n" "$(basename ${list[@]})"
			read -p "confirm (Y)es to delete the chapters: " key
			if [ "${key,,}" = "y" -o "${key,,}" = "yes" ]; then
				rm "${list[@]}" && echo "succesfully deleted" && exit 0
				echo "some issue deleting chapters" && exit "$?"
			fi
			echo "No chapters were deleted"
			exit 0
		;;
		--variables)
			print_variables; exit 0
		;;
	esac
	#detecting a non default chapter specification
	if [ -f "${book_dir}${1}" ]; then
		chapter="${book_dir}${1}"
		shift; continue
	fi
	positionals+=("$1")
	shift
done

set -- "${positionals[@]}"

if	 [ "$#" -eq 0 ]; then
	read_chapter
elif [ "$#" -eq 1 ]; then
	read_toc
else
	new_chapter "$*"
fi
#-------------------------------------------------------------------------------
exit 0
